{"version":3,"sources":["components/RegisterForm/RegisterForm.module.css","components/AppBar/AppBar.module.css","components/AddContactForm/AddContactForm.module.css","components/LoginForm/LoginForm.module.css","components/Filter/Filter.module.css","components/Contacts/Contacts.module.css","components/Section/Section.module.css","components/UserMenu/UserMenu.module.css","store/contacts/contacts-operations.js","store/contacts/contacts-slice.js","store/auth/auth-operations.js","store/auth/auth-slice.js","store/store.js","components/PrivateRoute.jsx","components/PublicRoute.jsx","store/auth/auth-selectors.js","components/Section/Section.jsx","components/UserMenu/UserMenu.jsx","components/AppBar/AppBar.jsx","store/contacts/contacts-selectors.js","components/Filter/Filter.jsx","components/Contacts/Contacts.jsx","components/AddContactForm/AddContactForm.jsx","pages/ContactsPage.jsx","components/LoginForm/LoginForm.jsx","pages/LoginPage.jsx","components/RegisterForm/RegisterForm.jsx","pages/RegisterPage.jsx","App.jsx","index.js"],"names":["module","exports","fetchContacts","createAsyncThunk","a","axios","get","data","addContact","credentials","post","contactsOperations","filterSlice","createSlice","name","initialState","reducers","setFilter","_","payload","contactsSlice","items","extraReducers","fulfilled","state","action","actions","filterReducer","reducer","contactsReducer","defaults","baseURL","token","headers","common","Authorization","register","login","authOperations","logout","authReducer","user","email","isLoggedIn","store","configureStore","filter","auth","contacts","middleware","getDefaultMiddleware","devTools","process","setupListeners","dispatch","PrivateRoute","children","routeProps","PublicRoute","getIsLoggedIn","getUserName","Section","title","className","s","section","UserMenu","useDispatch","useSelector","userName","paragraph","onClick","button","type","AppBar","nav","item","to","link","selectFilter","selectContacts","Filter","value","onChange","wrapper","label","htmlFor","input","id","Contacts","onDeleteClick","map","number","AddContactForm","onSubmitContact","useState","setName","setNumber","handleChange","e","target","onSubmit","preventDefault","pattern","autoComplete","required","ContactsPage","console","log","useEffect","normalizeFilter","toLowerCase","filteredContacts","Array","isArray","contact","includes","reverse","LoginForm","setEmail","password","setPassword","LoginPage","RegisterForm","RegisterPage","App","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f7c3deb2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"RegisterForm_wrapper__cNr4p\",\"label\":\"RegisterForm_label__gZxu9\",\"input\":\"RegisterForm_input__3dB_S\",\"button\":\"RegisterForm_button__1zYSb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"AppBar_nav__1frJk\",\"list\":\"AppBar_list__eDnui\",\"item\":\"AppBar_item__53XN5\",\"link\":\"AppBar_link__3rckl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"AddContactForm_wrapper__3USjG\",\"label\":\"AddContactForm_label__2PpxK\",\"input\":\"AddContactForm_input__3ogvm\",\"button\":\"AddContactForm_button__3rwTu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"LoginForm_wrapper__3oIMw\",\"label\":\"LoginForm_label__2sI4n\",\"input\":\"LoginForm_input__uJM09\",\"button\":\"LoginForm_button__xZNTq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Filter_wrapper__1mRh4\",\"label\":\"Filter_label__2vBHA\",\"input\":\"Filter_input__10RlN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Contacts_item__1_3u5\",\"paragraph\":\"Contacts_paragraph__dntGo\",\"button\":\"Contacts_button__2_wZz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__2PonD\",\"title\":\"Section_title__31sD5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paragraph\":\"UserMenu_paragraph__RaNi3\",\"button\":\"UserMenu_button__1Rfdu\"};","import axios from 'axios';\nimport { createAsyncThunk } from '@reduxjs/toolkit';\n\nconst fetchContacts = createAsyncThunk('contacts/fetchContacts', async () => {\n  try {\n    const { data } = await axios.get('/contacts');\n    return data;\n  } catch (error) {\n    // TODO: Добавить обработку ошибки error.message\n  }\n});\n\nconst addContact = createAsyncThunk(\n  'contacts/addContact',\n  async credentials => {\n    try {\n      await axios.post('/contacts', credentials);\n      // return data;\n    } catch (error) {\n      // TODO: Добавить обработку ошибки error.message\n    }\n  },\n);\n\nconst contactsOperations = {\n  fetchContacts,\n  addContact,\n};\n\nexport default contactsOperations;\n","import { createSlice } from '@reduxjs/toolkit';\nimport contactsOperations from './contacts-operations';\nconst filterSlice = createSlice({\n  name: 'filter',\n  initialState: '',\n  reducers: {\n    setFilter(_, { payload }) {\n      return payload;\n    },\n  },\n});\n\nconst initialState = {\n  items: [],\n};\n\nconst contactsSlice = createSlice({\n  name: 'contacts',\n  initialState,\n  extraReducers: {\n    [contactsOperations.fetchContacts.fulfilled](state, action) {\n      state.items = action.payload;\n    },\n    // [contactsOperations.addContact.fulfilled](state, action) {\n    //   state.items = state.items.push(action.payload);\n    // },\n  },\n});\n\nconst { setFilter } = filterSlice.actions;\n\nexport const actions = {\n  setFilter,\n};\n\nexport const filterReducer = filterSlice.reducer;\nexport const contactsReducer = contactsSlice.reducer;\n","import axios from 'axios';\nimport { createAsyncThunk } from '@reduxjs/toolkit';\n\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\n\nconst token = {\n  set(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  },\n  unset() {\n    axios.defaults.headers.common.Authorization = '';\n  },\n};\n\nconst register = createAsyncThunk('auth/register', async credentials => {\n  try {\n    const { data } = await axios.post('/users/signup', credentials);\n    token.set(data.token);\n    return data;\n  } catch (error) {\n    // TODO: Добавить обработку ошибки error.message\n  }\n});\n\nconst login = createAsyncThunk('auth/login', async credentials => {\n  try {\n    const { data } = await axios.post('/users/login', credentials);\n    token.set(data.token);\n    return data;\n  } catch (error) {\n    // TODO: Добавить обработку ошибки error.message\n  }\n});\n\nconst logout = createAsyncThunk('auth/logout', async () => {\n  try {\n    const { data } = await axios.post('/users/logout');\n    token.unset();\n    return data;\n  } catch (error) {\n    // TODO: Добавить обработку ошибки error.message\n  }\n});\n\nconst authOperations = {\n  register,\n  login,\n  logout,\n};\n\nexport default authOperations;\n","import { createSlice } from '@reduxjs/toolkit';\nimport authOperations from './auth-operations';\n\nconst initialState = {\n  user: { name: null, email: null },\n  token: null,\n  isLoggedIn: false,\n};\n\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  extraReducers: {\n    [authOperations.register.fulfilled](state, action) {\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n      state.isLoggedIn = true;\n    },\n    [authOperations.login.fulfilled](state, action) {\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n      state.isLoggedIn = true;\n    },\n    [authOperations.logout.fulfilled](state) {\n      state.user = { name: null, email: null };\n      state.token = null;\n      state.isLoggedIn = false;\n    },\n  },\n});\n\nexport const authReducer = authSlice.reducer;\n","import { configureStore } from '@reduxjs/toolkit';\nimport { filterReducer, contactsReducer } from './contacts/contacts-slice';\nimport { setupListeners } from '@reduxjs/toolkit/dist/query';\nimport { authReducer } from './auth/auth-slice';\n\nexport const store = configureStore({\n  reducer: {\n    filter: filterReducer,\n    auth: authReducer,\n    contacts: contactsReducer,\n  },\n  middleware: getDefaultMiddleware => [...getDefaultMiddleware()],\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nsetupListeners(store.dispatch);\n","import { Route } from 'react-router-dom';\n\nexport default function PrivateRoute({ children, ...routeProps }) {\n  return <Route {...routeProps}>{children}</Route>;\n}\n","import { Route } from 'react-router-dom';\n\nexport default function PublicRoute({ children, ...routeProps }) {\n  return <Route {...routeProps}>{children}</Route>;\n}\n","export const getIsLoggedIn = state => state.auth.isLoggedIn;\nexport const getUserName = state => state.auth.user.name;\n","import PropTypes from 'prop-types';\nimport s from './Section.module.css';\n\nexport default function Section({ title, children }) {\n  return (\n    <section className={s.section}>\n      <h2 className={s.title}>{title}</h2>\n      {children}\n    </section>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string,\n  contact: PropTypes.element,\n};\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport authOperations from '../../store/auth/auth-operations';\nimport { getIsLoggedIn, getUserName } from '../../store/auth/auth-selectors';\nimport s from './UserMenu.module.css';\n\nexport default function UserMenu() {\n  const dispatch = useDispatch();\n  const isLoggedIn = useSelector(getIsLoggedIn);\n  const userName = useSelector(getUserName);\n  const handleClick = () => dispatch(authOperations.logout());\n\n  return (\n    isLoggedIn && (\n      <div>\n        <p className={s.paragraph}>Hello, {userName}</p>\n        <button onClick={handleClick} className={s.button} type=\"button\">\n          Logout\n        </button>\n      </div>\n    )\n  );\n}\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport { getIsLoggedIn } from '../../store/auth/auth-selectors';\nimport Section from '../Section/Section';\nimport UserMenu from '../UserMenu/UserMenu';\nimport s from './AppBar.module.css';\n\nexport default function AppBar() {\n  const isLoggedIn = useSelector(getIsLoggedIn);\n\n  return (\n    <Section title=\"My phonebook\">\n      <header>\n        <nav className={s.nav}>\n          <ul>\n            {isLoggedIn ? (\n              <li className={s.item}>\n                <NavLink to=\"/contacts\" className={s.link}>\n                  Contacts\n                </NavLink>\n              </li>\n            ) : (\n              <>\n                <li className={s.item}>\n                  <NavLink to=\"/register\" className={s.link}>\n                    Register\n                  </NavLink>\n                </li>\n                <li className={s.item}>\n                  <NavLink to=\"/login\" className={s.link}>\n                    Login\n                  </NavLink>\n                </li>\n              </>\n            )}\n          </ul>\n          <UserMenu></UserMenu>\n        </nav>\n      </header>\n    </Section>\n  );\n}\n","export const selectFilter = state => state.filter;\nexport const selectContacts = state => state.contacts.items;\n","import PropTypes from 'prop-types';\nimport s from './Filter.module.css';\n\nexport default function Filter({ value, onChange }) {\n  return (\n    <div className={s.wrapper}>\n      <label className={s.label} htmlFor=\"filter\">\n        Find contacts by name\n      </label>\n      <input\n        className={s.input}\n        id=\"filter\"\n        value={value}\n        onChange={onChange}\n      ></input>\n    </div>\n  );\n}\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport s from './Contacts.module.css';\n\nexport default function Contacts({ contacts, onDeleteClick }) {\n  return (\n    <ul>\n      {contacts.map(({ id, name, number }) => {\n        return (\n          <li className={s.item} key={id} name={name}>\n            <p className={s.paragraph}>\n              <span>{name}</span>\n              <span>{number}</span>\n            </p>\n            <button\n              className={s.button}\n              onClick={() => onDeleteClick(id)}\n              type=\"button\"\n            >\n              Delete\n            </button>\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n\nContacts.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ),\n};\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport s from './AddContactForm.module.css';\n\nexport default function AddContactForm({ onSubmitContact }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  function handleChange(e) {\n    const { name, value } = e.target;\n    if (name === 'name') setName(value);\n    if (name === 'number') setNumber(value);\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    const newContact = { name, number };\n    onSubmitContact(newContact);\n    reset();\n  }\n\n  function reset() {\n    setName('');\n    setNumber('');\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <div className={s.wrapper}>\n        <label className={s.label} htmlFor=\"name\">\n          Name:\n        </label>\n        <input\n          className={s.input}\n          value={name}\n          onChange={handleChange}\n          type=\"text\"\n          id=\"name\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de d'Artagnan\"\n          autoComplete=\"off\"\n          required\n        />\n      </div>\n      <div className={s.wrapper}>\n        <label className={s.label} htmlFor=\"number\">\n          Phone:\n        </label>\n        <input\n          className={s.input}\n          value={number}\n          onChange={handleChange}\n          type=\"tel\"\n          id=\"number\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </div>\n\n      <button className={s.button} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nAddContactForm.propTypes = {\n  onSubmitContact: PropTypes.func.isRequired,\n};\n","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { actions } from '../store/contacts/contacts-slice';\nimport {\n  selectContacts,\n  selectFilter,\n} from '../store/contacts/contacts-selectors';\nimport Section from '../components/Section/Section';\nimport Filter from '../components/Filter/Filter';\nimport Contacts from '../components/Contacts/Contacts';\nimport AddContactForm from '../components/AddContactForm/AddContactForm';\nimport contactsOperations from '../store/contacts/contacts-operations';\n\nexport default function ContactsPage() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n  console.log(contacts);\n\n  useEffect(() => {\n    dispatch(contactsOperations.fetchContacts());\n  }, [dispatch]);\n\n  const handleFilter = e => dispatch(actions.setFilter(e.target.value));\n  const addContact = contact =>\n    dispatch(contactsOperations.addContact(contact));\n  dispatch(contactsOperations.fetchContacts());\n\n  const normalizeFilter = filter.toLowerCase();\n  const filteredContacts = Array.isArray(contacts)\n    ? contacts.filter(contact =>\n        contact.name.toLowerCase().includes(normalizeFilter),\n      )\n    : contacts;\n\n  return (\n    <>\n      <Section title=\"Add new contact\">\n        <AddContactForm onSubmitContact={addContact} />\n      </Section>\n      <Section title=\"Contacts\">\n        <Filter value={filter} onChange={handleFilter} />\n        {Array.isArray(contacts) && (\n          <Contacts\n            contacts={filteredContacts.reverse()}\n            // onDeleteClick={deleteContact}\n          />\n        )}\n      </Section>\n    </>\n  );\n}\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport authOperations from '../../store/auth/auth-operations';\n\nimport s from './LoginForm.module.css';\n\nexport default function LoginForm() {\n  const dispatch = useDispatch();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  function handleChange(e) {\n    const { name, value } = e.target;\n    if (name === 'email') setEmail(value);\n    if (name === 'password') setPassword(value);\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    dispatch(authOperations.login({ email, password }));\n    setEmail('');\n    setPassword('');\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <div className={s.wrapper}>\n        <label className={s.label} htmlFor=\"loginInLogin\">\n          Email:\n        </label>\n        <input\n          className={s.input}\n          value={email}\n          onChange={handleChange}\n          type=\"text\"\n          id=\"emailInLogin\"\n          name=\"email\"\n          // autoComplete=\"off\"\n          autoComplete=\"on\"\n          required\n        />\n      </div>\n      <div className={s.wrapper}>\n        <label className={s.label} htmlFor=\"passwordInLogin\">\n          Password:\n        </label>\n        <input\n          className={s.input}\n          value={password}\n          onChange={handleChange}\n          type=\"password\"\n          id=\"passwordInLogin\"\n          name=\"password\"\n          // autoComplete=\"off\"\n          autoComplete=\"on\"\n          required\n        />\n      </div>\n\n      <button className={s.button} type=\"submit\">\n        Login\n      </button>\n    </form>\n  );\n}\n","import React from 'react';\nimport Section from '../components/Section/Section';\nimport LoginForm from '../components/LoginForm/LoginForm';\n\nexport default function LoginPage() {\n  return (\n    <>\n      <Section title=\"Login\">\n        <LoginForm />\n      </Section>\n    </>\n  );\n}\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport authOperations from '../../store/auth/auth-operations';\n\nimport s from './RegisterForm.module.css';\n\nexport default function RegisterForm() {\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  function handleChange(e) {\n    const { name, value } = e.target;\n    if (name === 'name') setName(value);\n    if (name === 'email') setEmail(value);\n    if (name === 'password') setPassword(value);\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    dispatch(authOperations.register({ name, email, password }));\n    setName('');\n    setEmail('');\n    setPassword('');\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <div className={s.wrapper}>\n        <label className={s.label} htmlFor=\"nameInRegister\">\n          Name:\n        </label>\n        <input\n          className={s.input}\n          value={name}\n          onChange={handleChange}\n          type=\"text\"\n          id=\"nameInRegister\"\n          name=\"name\"\n          // autoComplete=\"off\"\n          autoComplete=\"on\"\n          required\n        />\n      </div>\n      <div className={s.wrapper}>\n        <label className={s.label} htmlFor=\"emailInRegister\">\n          Email:\n        </label>\n        <input\n          className={s.input}\n          value={email}\n          onChange={handleChange}\n          type=\"text\"\n          id=\"emailInRegister\"\n          name=\"email\"\n          // autoComplete=\"off\"\n          autoComplete=\"on\"\n          required\n        />\n      </div>\n      <div className={s.wrapper}>\n        <label className={s.label} htmlFor=\"passwordInRegister\">\n          Password:\n        </label>\n        <input\n          className={s.input}\n          value={password}\n          onChange={handleChange}\n          type=\"password\"\n          id=\"passwordInRegister\"\n          name=\"password\"\n          // autoComplete=\"off\"\n          autoComplete=\"on\"\n          required\n        />\n      </div>\n\n      <button className={s.button} type=\"submit\">\n        Register\n      </button>\n    </form>\n  );\n}\n","import React from 'react';\nimport Section from '../components/Section/Section';\nimport RegisterForm from '../components/RegisterForm/RegisterForm';\n\nexport default function RegisterPage() {\n  return (\n    <>\n      <Section title=\"Register\">\n        <RegisterForm />\n      </Section>\n    </>\n  );\n}\n","import { Switch } from 'react-router-dom';\nimport PrivateRoute from './components/PrivateRoute';\nimport PublicRoute from './components/PublicRoute';\n\nimport AppBar from './components/AppBar/AppBar';\nimport ContactsPage from './pages/ContactsPage';\nimport LoginPage from './pages/LoginPage';\nimport RegisterPage from './pages/RegisterPage';\n\nexport default function App() {\n  return (\n    <>\n      <AppBar />\n      <Switch>\n        <PublicRoute exact path=\"/register\">\n          <RegisterPage />\n        </PublicRoute>\n        <PublicRoute exact path=\"/login\">\n          <LoginPage />\n        </PublicRoute>\n        <PrivateRoute exact path=\"/contacts\">\n          <ContactsPage />\n        </PrivateRoute>\n      </Switch>\n    </>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { store } from './store/store';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}